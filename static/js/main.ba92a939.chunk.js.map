{"version":3,"sources":["Components/landingPage.js","Components/about.js","Components/skills.js","Components/contact.js","Components/main.js","App.js","serviceWorker.js","index.js"],"names":["LandingPage","style","width","margin","className","col","src","alt","href","rel","target","aria-hidden","Component","About","Skills","Contact","Main","exact","path","component","App","title","scroll","to","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ba92a939.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Grid, Cell} from 'react-mdl';\n\n\nclass LandingPage extends Component {\n  render() {\n    return(\n<div style={{width: '100%', margin: 'auto'}}>\n   <Grid className=\"landing-grid\">\n     <Cell col={12}>\n       <img\n       src=\"./img/kgauza.png\"\n       alt=\"landingimg\" \n       className=\"landing-img\"\n       />\n      <div className=\"banner-text\">\n        <h1>Junior Web developer</h1>\n        <hr/>\n        <p> Front-end developer </p>\n        <div className=\"social-links\">\n        \n           {/* Github */}\n           <a href= \"https://github.com/kgauzampe\" rel=\"noopener noreferrer\" target=\"_blank\">\n            <i className=\"fa fa-github-square\"  aria-hidden=\"true\"/>\n          </a>\n\n            {/* linkedin */}\n            <a href= \"https://github.com/kgauzampe\" rel=\"noopener noreferrer\" target=\"_blank\">\n            <i className=\"fa fa-linkedin-square\"  aria-hidden=\"true\"/>\n          </a>\n\n        </div>\n        </div> \n     </Cell>\n   </Grid>\n</div>\n    )\n  }\n}\n      \n    \nexport default LandingPage;","import React, { Component } from 'react';\n\n\n\nclass About extends Component {\n  render() {\n    return(\n<div className=\"AboutMe\">\n    \n    <img\n       src=\"./img/grad1.png\"\n       alt=\"grad1img\"\n       className=\"grad1-img\"\n       />\n       <div className=\"about-banner\">\n      <h1>About Me</h1>\n      <hr/>\n    <p> I am software devloper who has a keen intrest in advancing my software skills\n       and intergrating design with better functionality.Throughout the years I have embraced \n      different leadership positions from peer faciliation to serving as the Chairperson in the health and\n       wellness deparment within my University.\n      Within the tech enviroment I have had the pleasure of being part of a team who\n       participated in the Global Legal Hackathon in 2020 and we won the third spot. \n      Aside from the tech world I am a real lover of contact sport and people development.\n </p>\n </div>\n</div>\n    )\n  }\n}\n      \n    \nexport default About;","import React, { Component } from 'react';\n\n\n\nclass Skills extends Component {\n  render() {\n    return(\n      <div className=\"skills-Banner\">\n        <h1>Skills</h1>\n\n        <hr/>\n\n        <ul className=\"skills-list\"> \n          <li>React</li>\n          <li>Javascript </li>\n          <li>Nodejs</li>\n          <li>Jasmine</li>\n          <li>Docker</li>\n          <li>\n            SQL\n            <ul>\n              <li>PLSQL</li> \n              <li>Postgres</li> \n            </ul>  \n          </li>\n          \n        </ul>\n      </div>\n    )\n  }\n}\n      \n    \nexport default Skills;","import React, { Component } from 'react';\n\n\n\nclass Contact extends Component {\n  render() {\n    return(\n      <div className=\"contact-banner\">\n        <h1>Contact Me </h1>\n\n        <hr/>\n\n        <div className=\"contactinfo\">\n          <div>\n            <img\n              src=\"./img/phone3.png\"\n            />\n            <p>0730395854</p>\n          </div>\n          <div>\n            <img\n              src=\"./img/phone3.png\"\n            />\n            <p>0672063229</p>\n          </div>\n          \n          <div>\n          <img\n              src=\"./img/email13.png\"\n            />\n            <p>kgauza.mpe@gmail.com</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n      \n    \nexport default Contact;","import React from 'react';\nimport LandingPage from './landingPage';\nimport About from './about';\nimport Skills from './skills';\nimport Contact from './contact';\nimport {Switch, Route} from 'react-router-dom';\n\nconst Main = () => (\n    <Switch>\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route  path=\"/about\" component={About} />\n        <Route  path=\"/skills\" component={Skills} />\n        <Route  path=\"/contact\" component={Contact} />\n    </Switch>\n)\n\nexport default Main;","import React from 'react';\nimport './App.css';\nimport {Layout, Header, Navigation, Drawer, Content} from 'react-mdl'\nimport Main from './Components/main';\nimport {Link} from 'react-router-dom';\n\nfunction App() {\n  return (\n   <div className=\"nav-bar\">\n     <Layout>\n       <Header className=\"header-color\" title=\"Mpumelelo Mpe\" scroll>\n         <Navigation>\n           <Link to=\"/\">Home</Link>\n           <Link to=\"/about\">About Me</Link>\n           <Link to=\"/skills\">Skills</Link>\n           <Link to=\"/contact\">Contact Me</Link>            \n         </Navigation>  \n       </Header>\n       <Drawer title=\"Mpumelelo Mpe\">\n       <Navigation>\n           <Link to=\"/\">Home</Link>\n           <Link to=\"/about\">About Me</Link>\n           <Link to=\"/skills\">Skills</Link>\n           <Link to=\"/contact\">Contact Me</Link>\n         </Navigation>\n       </Drawer>\n       <Content>\n         <div className=\"page-content\" />\n         <Main/>\n       </Content>\n     </Layout>\n\n   </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}